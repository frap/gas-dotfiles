#+TITLE:  Emacs Smart Mode Line
#+AUTHOR: Andrew Gasson
#+EMAIL:  agasson@red-elvis.net
#+DATE:   2017 Feb 08
#+TAGS:   emacs

This literate programming file tangles out the configuration for
creating a better mode line in Emacs.

* Smart Mode Line

  While I like the cleanliness of the [[https://github.com/Bruce-Connor/smart-mode-line][Smart Mode Line]], I actually feel
  that I get cleaner mode-lines with [[PowerLine][PowerLine]], so while I'm leaving
  this configuration code here, I'm actually not tangling it.

  #+BEGIN_SRC elisp
    (use-package smart-mode-line
      :ensure t
      :init (add-hook 'after-init-hook 'sml/setup)
      :config
      ;; Shorten a couple of well-known directories ... these need to be first:
      (add-to-list 'sml/replacer-regexp-list '("^~/Google Drive/" "ùîæ:"))
      (add-to-list 'sml/replacer-regexp-list '("^~/Google/" "ùîæ:"))
      (add-to-list 'sml/replacer-regexp-list '("^~/google/" "ùîæ:"))
      (add-to-list 'sml/replacer-regexp-list '("^~/Dropbox/" "‚ó∞:"))
      (add-to-list 'sml/replacer-regexp-list '("^~/atea/" "ùïé:"))
      (add-to-list 'sml/replacer-regexp-list '("^~/Work/" "ùïé:"))

      (add-to-list 'sml/replacer-regexp-list '("^~/website/" "[ÔÉæ]"))

      ;; Fix a couple of long project names with an icon:
      (add-to-list 'sml/replacer-regexp-list '("^~/Google Drive/technical/" "[œÑŒµŒ∫]"))
      (add-to-list 'sml/replacer-regexp-list '("^~/Google/technical/" "[œÑŒµŒ∫]"))
      (add-to-list 'sml/replacer-regexp-list '("^~/technical/" "[œÑŒµŒ∫]"))

      (add-to-list 'sml/replacer-regexp-list '("^~/Google Drive/Notes/" "[‚úè]"))
      (add-to-list 'sml/replacer-regexp-list '("^~/Google/Notes/" "[‚úè]"))
      (add-to-list 'sml/replacer-regexp-list '("^~/Notes/" "[‚úè]"))

      (add-to-list 'sml/replacer-regexp-list '("^~/Dev/emacs/gas-dotfiles/" "[‚óï]"))
      (add-to-list 'sml/replacer-regexp-list '("^~/Work/dot-files/" "[‚óï]"))

      (sml/apply-theme 'dark))
  #+END_SRC

  Hiding some Minor modes in the mode line is real swell, the
  =use-package= does most of this, but a few it doesn't.

  #+BEGIN_SRC elisp
  (setq useless-minor-modes '(" Fill"   ;; First entry must have a space.
                              "wg"
                              "Projectile.*"))
  (setq rm-blacklist (mapconcat 'identity useless-minor-modes "\\| "))
  #+END_SRC

* Technical Artifacts

  Make sure that we can simply =require= this library.

#+BEGIN_SRC elisp
  (provide 'init-mode-line2)
#+END_SRC

  Before you can build this on a new system, make sure that you put
  the cursor over any of these properties, and hit: =C-c C-c=

  *Note:*: We are not using this file. If I want to switch, change the
  =tangle= line below to: =~/.emacs.d/elisp/init-mode-line.el=

#+PROPERTY:    tangle ~/.emacs.d/elisp/init-mode-line2.el
#+DESCRIPTION: A literate programming version of my Emacs ModeLine Initialization
#+PROPERTY:    results silent
#+PROPERTY:    eval no-export
#+PROPERTY:    comments org
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
